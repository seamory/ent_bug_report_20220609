// Code generated by entc, DO NOT EDIT.

package hierarchy

const (
	// Label holds the string label denoting the hierarchy type in the database.
	Label = "hierarchy"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescribe holds the string denoting the describe field in the database.
	FieldDescribe = "describe"
	// FieldSort holds the string denoting the sort field in the database.
	FieldSort = "sort"
	// EdgeChild holds the string denoting the child edge name in mutations.
	EdgeChild = "child"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// Table holds the table name of the hierarchy in the database.
	Table = "hierarchies"
	// ChildTable is the table that holds the child relation/edge. The primary key declared below.
	ChildTable = "hierarchy_relation"
	// ParentTable is the table that holds the parent relation/edge. The primary key declared below.
	ParentTable = "hierarchy_relation"
)

// Columns holds all SQL columns for hierarchy fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDescribe,
	FieldSort,
}

var (
	// ChildPrimaryKey and ChildColumn2 are the table columns denoting the
	// primary key for the child relation (M2M).
	ChildPrimaryKey = []string{"parent_id", "child_id"}
	// ParentPrimaryKey and ParentColumn2 are the table columns denoting the
	// primary key for the parent relation (M2M).
	ParentPrimaryKey = []string{"parent_id", "child_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultSort holds the default value on creation for the "sort" field.
	DefaultSort int
)
